{"version":3,"sources":["Auth.jsx","Chart.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["AuthContext","createContext","token","AuthProvider","children","useState","value","setValue","useEffect","searchParams","URL","document","location","has","get","window","localStorage","getItem","setItem","delete","search","toString","history","replaceState","undefined","pathname","length","old","replace","process","href","Provider","PERCENT","Intl","NumberFormat","style","DATE","format","date","DateTimeFormat","month","day","TEMPERATURE","maximumFractionDigits","Month","year","hide","humidity","data","maxima","chart","setChart","useContext","Promise","all","Array","from","map","_","index","fetch","String","padStart","headers","Accept","Authorization","then","d","json","catch","console","warn","indoorTemps","indoorBoiler","outdoorTemps","outdoorHumidity","filter","Boolean","error","flat","forEach","indoor","outdoor","x","Date","getTime","noValue","push","tooltipLabel","celsius","y","percentBoiler","chartData","tempMaxima","Math","max","theme","VictoryTheme","material","height","width","scale","containerComponent","voronoiDimension","labelComponent","cornerRadius","flyoutStyle","fill","labels","datum","barRatio","alignment","interpolation","stroke","tickFormat","tickValues","concat","dependentAxis","orientation","t","App","setHide","Auth","type","onChange","position","Chart","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b2bb933d.chunk.js","sourcesContent":["import { createContext, useState, useEffect, useContext } from \"react\";\n\nexport const AuthContext = createContext({ token: null });\n\nexport const useToken = () => useContext(AuthContext).token;\n\nconst AuthProvider = ({ children }) => {\n  const [value, setValue] = useState({ token: null });\n\n  useEffect(() => {\n    let token;\n    const { searchParams } = new URL(document.location);\n    if (searchParams.has(\"token\")) {\n      token = searchParams.get(\"token\");\n    }\n\n    if (!token) {\n      token = window.localStorage.getItem(\"token\");\n    }\n\n    if (!token) {\n      window.location.replace(\n        `${process.env.REACT_APP_API_BASE_URI}/tokens?from=${window.location.href}`\n      );\n    } else {\n      window.localStorage.setItem(\"token\", token);\n      if (searchParams.has(\"token\")) {\n        searchParams.delete(\"token\");\n        const search = searchParams.toString();\n        window.history.replaceState(\n          undefined,\n          undefined,\n          `${window.location.pathname}${search.length > 0 ? `?${search}` : \"\"}`\n        );\n      }\n\n      setValue((old) => ({ ...old, token }));\n    }\n  }, []);\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthProvider;\n","import { useEffect, useState } from \"react\";\nimport {\n  VictoryChart,\n  VictoryTheme,\n  VictoryAxis,\n  VictoryLine,\n  VictoryBar,\n  VictoryVoronoiContainer,\n  VictoryTooltip,\n  VictoryArea,\n} from \"victory\";\nimport { useToken } from \"./Auth\";\n\nvar PERCENT = new Intl.NumberFormat(undefined, {\n  style: \"percent\",\n});\n\nconst DATE = {\n  format: (date) =>\n    new Intl.DateTimeFormat(undefined, {\n      month: \"short\",\n      day: \"numeric\",\n    }).format(date),\n};\n\nconst TEMPERATURE = {\n  format: (value) =>\n    `${new Intl.NumberFormat(undefined, {\n      maximumFractionDigits: 0,\n    }).format(value)}Â°C`,\n};\n\nconst Month = ({ year, month, hide = { humidity: false } }) => {\n  const [chart, setChart] = useState({ data: [], maxima: undefined });\n  const token = useToken();\n\n  useEffect(() => {\n    const getData = () => {\n      Promise.all(\n        Array.from({ length: 12 }).map((_, index) =>\n          fetch(\n            `${process.env.REACT_APP_API_BASE_URI}/data?month=${String(\n              index + 1\n            ).padStart(2, \"0\")}&year=${year}`,\n            {\n              headers: {\n                Accept: \"application/json\",\n                Authorization: `Bearer ${token}`,\n              },\n            }\n          )\n            .then((d) => d.json())\n            .catch(console.warn)\n        )\n      ).then((data) => {\n        const indoorTemps = [];\n        const indoorBoiler = [];\n        const outdoorTemps = [];\n        const outdoorHumidity = [];\n\n        data\n          .filter(Boolean)\n          .filter(({ error }) => !error)\n          .map(({ data }) => data)\n          .flat()\n          .forEach(({ date, indoor, outdoor }) => {\n            const x = new Date(date).getTime();\n\n            if (indoor && !indoor.noValue) {\n              indoorTemps.push({\n                tooltipLabel: `indoor: ${TEMPERATURE.format(indoor.celsius)}`,\n                x,\n                y: indoor.celsius,\n              });\n              indoorBoiler.push({\n                tooltipLabel: `boiler: ${PERCENT.format(indoor.percentBoiler)}`,\n                x,\n                y: indoor.percentBoiler,\n              });\n            }\n            if (outdoor) {\n              outdoorTemps.push({\n                tooltipLabel: `outdoor: ${TEMPERATURE.format(outdoor.celsius)}`,\n                x,\n                y: outdoor.celsius,\n              });\n              outdoorHumidity.push({\n                tooltipLabel: `humidity: ${PERCENT.format(outdoor.humidity)}`,\n                x,\n                y: outdoor.humidity,\n              });\n            }\n          });\n\n        const chartData = [\n          indoorBoiler,\n          outdoorHumidity,\n          indoorTemps,\n          outdoorTemps,\n        ];\n        const tempMaxima = Math.max(\n          ...indoorTemps.map((d) => d.y),\n          ...outdoorTemps.map((d) => d.y)\n        );\n\n        setChart({\n          data: chartData,\n          tempMaxima: tempMaxima,\n        });\n      });\n    };\n\n    if (token) {\n      getData();\n    }\n  }, [month, token, year]);\n\n  if (chart.data.length <= 0) return null;\n\n  return (\n    <VictoryChart\n      theme={VictoryTheme.material}\n      height={600}\n      width={2000}\n      scale={{ x: \"time\", y: \"linear\" }}\n      containerComponent={\n        <VictoryVoronoiContainer\n          voronoiDimension=\"x\"\n          labelComponent={\n            <VictoryTooltip cornerRadius={10} flyoutStyle={{ fill: \"white\" }} />\n          }\n          labels={({ datum }) => datum.tooltipLabel || datum.y}\n        />\n      }\n    >\n      <VictoryArea\n        data={chart.data[1]}\n        barRatio={0.1}\n        alignment=\"start\"\n        interpolation=\"stepBefore\"\n        style={{\n          data: {\n            fill: hide.humidity ? \"transparent\" : \"rgb(201, 238, 247)\",\n          },\n        }}\n      />\n      <VictoryBar\n        data={chart.data[0]}\n        barRatio={0.7}\n        alignment=\"start\"\n        style={{ data: { fill: \"rgb(153, 63, 35)\" } }}\n      />\n\n      <VictoryLine\n        data={chart.data[2]}\n        y={(datum) => datum.y / chart.tempMaxima}\n        style={{ data: { stroke: \"red\" } }}\n      />\n      <VictoryLine\n        data={chart.data[3]}\n        y={(datum) => datum.y / chart.tempMaxima}\n        style={{ data: { stroke: \"green\" } }}\n      />\n\n      <VictoryAxis\n        tickFormat={DATE.format}\n        tickValues={Array.from({ length: 12 })\n          .map((_, index) => new Date(`${year}-${index + 1}-01`).getTime())\n          .concat(new Date(`${year}-12-31`).getTime())}\n      />\n      <VictoryAxis dependentAxis tickFormat={PERCENT.format} />\n      <VictoryAxis\n        dependentAxis\n        orientation=\"right\"\n        tickFormat={(t) => TEMPERATURE.format(t * chart.tempMaxima)}\n      />\n    </VictoryChart>\n  );\n};\n\nexport default Month;\n","import { useState } from \"react\";\nimport Chart from \"./Chart\";\nimport AuthProvider from \"./Auth\";\n\nconst App = () => {\n  const [hide, setHide] = useState({ humidity: false });\n\n  return (\n    <AuthProvider>\n      <div>\n        <input\n          type=\"checkbox\"\n          value={hide.humidity}\n          onChange={() =>\n            setHide((old) => ({ ...old, humidity: !old.humidity }))\n          }\n        />\n        Hide Humidity\n        <div style={{ position: \"relative\" }}>\n          <Chart year={2020} hide={hide} />\n          <Chart year={2019} hide={hide} />\n        </div>\n      </div>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
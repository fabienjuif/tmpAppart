{"version":3,"sources":["Auth.jsx","Chart.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["login","window","localStorage","removeItem","location","replace","process","href","AuthContext","createContext","token","AuthProvider","children","useState","value","setValue","useEffect","searchParams","URL","document","has","get","getItem","setItem","delete","search","toString","history","replaceState","undefined","pathname","length","old","Provider","PERCENT","Intl","NumberFormat","style","DATE","format","date","DateTimeFormat","month","day","TEMPERATURE","maximumFractionDigits","Month","year","hide","humidity","data","maxima","chart","setChart","useContext","Promise","all","Array","from","map","_","index","fetch","String","padStart","headers","Accept","Authorization","then","d","status","json","catch","console","warn","indoorTemps","indoorBoiler","outdoorTemps","outdoorHumidity","filter","Boolean","error","flat","forEach","indoor","outdoor","x","Date","getTime","noValue","push","tooltipLabel","celsius","y","percentBoiler","chartData","tempMaxima","Math","max","theme","VictoryTheme","material","height","width","scale","containerComponent","voronoiDimension","labelComponent","cornerRadius","flyoutStyle","fill","labels","datum","barRatio","alignment","interpolation","stroke","tickFormat","tickValues","concat","dependentAxis","orientation","t","App","setHide","getUTCFullYear","Auth","type","onChange","position","Chart","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4QAEMA,EAAQ,WACZC,OAAOC,aAAaC,WAAW,SAC/BF,OAAOG,SAASC,QAAhB,UACKC,wEADL,wBACuDL,OAAOG,SAASG,QAI5DC,EAAcC,wBAAc,CAAEC,MAAO,KAAMV,UAuCzCW,EAnCM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACXC,mBAAS,CAAEH,MAAO,KAAMV,UADb,mBAC9Bc,EAD8B,KACvBC,EADuB,KAgCrC,OA7BAC,qBAAU,WACR,IAAIN,EACIO,EAAiB,IAAIC,IAAIC,SAASf,UAAlCa,aASR,GARIA,EAAaG,IAAI,WACnBV,EAAQO,EAAaI,IAAI,UAGtBX,IACHA,EAAQT,OAAOC,aAAaoB,QAAQ,UAGjCZ,EAEE,CAEL,GADAT,OAAOC,aAAaqB,QAAQ,QAASb,GACjCO,EAAaG,IAAI,SAAU,CAC7BH,EAAaO,OAAO,SACpB,IAAMC,EAASR,EAAaS,WAC5BzB,OAAO0B,QAAQC,kBACbC,OACAA,EAFF,UAGK5B,OAAOG,SAAS0B,UAHrB,OAGgCL,EAAOM,OAAS,EAAhB,WAAwBN,GAAW,KAIrEV,GAAS,SAACiB,GAAD,mBAAC,eAAcA,GAAf,IAAoBtB,kBAb7BV,MAeD,IAEI,cAACQ,EAAYyB,SAAb,CAAsBnB,MAAOA,EAA7B,SAAqCF,KChC1CsB,EAAU,IAAIC,KAAKC,kBAAaP,EAAW,CAC7CQ,MAAO,YAGHC,EAAO,CACXC,OAAQ,SAACC,GAAD,OACN,IAAIL,KAAKM,oBAAeZ,EAAW,CACjCa,MAAO,QACPC,IAAK,YACJJ,OAAOC,KAGRI,EACI,SAAC9B,GAAD,gBACH,IAAIqB,KAAKC,kBAAaP,EAAW,CAClCgB,sBAAuB,IACtBN,OAAOzB,GAHJ,UAgKKgC,EA1JD,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,KAAML,EAAwC,EAAxCA,MAAwC,IAAjCM,YAAiC,MAA1B,CAAEC,UAAU,GAAc,IACnCpC,mBAAS,CAAEqC,KAAM,GAAIC,YAAQtB,IADM,mBACtDuB,EADsD,KAC/CC,EAD+C,ODrBlCC,qBAAW9C,GCuB9BE,EAFqD,EAErDA,MAAOV,EAF8C,EAE9CA,MAyFf,OAvFAgB,qBAAU,WAkFJN,GAhFF6C,QAAQC,IACNC,MAAMC,KAAK,CAAE3B,OAAQ,KAAM4B,KAAI,SAACC,EAAGC,GAAJ,OAC7BC,MAAM,GAAD,OACAxD,wEADA,uBACiDyD,OAClDF,EAAQ,GACRG,SAAS,EAAG,KAHX,iBAGwBjB,GAC3B,CACEkB,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYzD,MAI5B0D,MAAK,SAACC,GACL,OAAiB,MAAbA,EAAEC,OACGtE,IAGFqE,EAAEE,UAEVC,MAAMC,QAAQC,UAEnBN,MAAK,SAAClB,GACN,IAAMyB,EAAc,GACdC,EAAe,GACfC,EAAe,GACfC,EAAkB,GAExB5B,EACG6B,OAAOC,SACPD,QAAO,qBAAGE,SACVtB,KAAI,qBAAGT,QACPgC,OACAC,SAAQ,YAAgC,IAA7B3C,EAA4B,EAA5BA,KAAM4C,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAClBC,EAAI,IAAIC,KAAK/C,GAAMgD,UAErBJ,IAAWA,EAAOK,UACpBd,EAAYe,KAAK,CACfC,aAAa,WAAD,OAAa/C,EAAmBwC,EAAOQ,UACnDN,IACAO,EAAGT,EAAOQ,UAEZhB,EAAac,KAAK,CAChBC,aAAa,WAAD,OAAazD,EAAQK,OAAO6C,EAAOU,gBAC/CR,IACAO,EAAGT,EAAOU,iBAGVT,IACFR,EAAaa,KAAK,CAChBC,aAAa,YAAD,OAAc/C,EAAmByC,EAAQO,UACrDN,IACAO,EAAGR,EAAQO,UAEbd,EAAgBY,KAAK,CACnBC,aAAa,aAAD,OAAezD,EAAQK,OAAO8C,EAAQpC,WAClDqC,IACAO,EAAGR,EAAQpC,eAKnB,IAAM8C,EAAY,CAChBnB,EACAE,EACAH,EACAE,GAEImB,EAAaC,KAAKC,IAAL,MAAAD,KAAI,YAClBtB,EAAYhB,KAAI,SAACU,GAAD,OAAOA,EAAEwB,MADP,mBAElBhB,EAAalB,KAAI,SAACU,GAAD,OAAOA,EAAEwB,QAG/BxC,EAAS,CACPH,KAAM6C,EACNC,WAAYA,SAQjB,CAAChG,EAAO0C,EAAOhC,EAAOqC,IAErBK,EAAMF,KAAKnB,QAAU,EAAU,KAGjC,eAAC,IAAD,CACEoE,MAAOC,IAAaC,SACpBC,OAAQ,IACRC,MAAO,IACPC,MAAO,CAAElB,EAAG,OAAQO,EAAG,UACvBY,mBACE,cAAC,IAAD,CACEC,iBAAiB,IACjBC,eACE,cAAC,IAAD,CAAgBC,aAAc,GAAIC,YAAa,CAAEC,KAAM,WAEzDC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAeA,EAAMrB,cAAgBqB,EAAMnB,KAXzD,UAeE,cAAC,IAAD,CACE3C,KAAME,EAAMF,KAAK,GACjB+D,SAAU,GACVC,UAAU,QACVC,cAAc,aACd9E,MAAO,CACLa,KAAM,CACJ4D,KAAM9D,EAAKC,SAAW,cAAgB,yBAI5C,cAAC,IAAD,CACEC,KAAME,EAAMF,KAAK,GACjB+D,SAAU,GACVC,UAAU,QACV7E,MAAO,CAAEa,KAAM,CAAE4D,KAAM,uBAGzB,cAAC,IAAD,CACE5D,KAAME,EAAMF,KAAK,GACjB2C,EAAG,SAACmB,GAAD,OAAWA,EAAMnB,EAAIzC,EAAM4C,YAC9B3D,MAAO,CAAEa,KAAM,CAAEkE,OAAQ,UAE3B,cAAC,IAAD,CACElE,KAAME,EAAMF,KAAK,GACjB2C,EAAG,SAACmB,GAAD,OAAWA,EAAMnB,EAAIzC,EAAM4C,YAC9B3D,MAAO,CAAEa,KAAM,CAAEkE,OAAQ,YAG3B,cAAC,IAAD,CACEC,WAAY/E,EAAKC,OACjB+E,WAAY7D,MAAMC,KAAK,CAAE3B,OAAQ,KAC9B4B,KAAI,SAACC,EAAGC,GAAJ,OAAc,IAAI0B,KAAJ,UAAYxC,EAAZ,YAAoBc,EAAQ,EAA5B,QAAoC2B,aACtD+B,OAAO,IAAIhC,KAAJ,UAAYxC,EAAZ,WAA0ByC,aAEtC,cAAC,IAAD,CAAagC,eAAa,EAACH,WAAYnF,EAAQK,SAC/C,cAAC,IAAD,CACEiF,eAAa,EACbC,YAAY,QACZJ,WAAY,SAACK,GAAD,OAAO9E,EAAmB8E,EAAItE,EAAM4C,mBCrJzC2B,EA3BH,WAAO,IAAD,EACQ9G,mBAAS,CAAEoC,UAAU,IAD7B,mBACTD,EADS,KACH4E,EADG,KAGV7E,GAAO,IAAIwC,MAAOsC,iBAExB,OACE,cAACC,EAAD,UACE,gCACE,uBACEC,KAAK,WACLjH,MAAOkC,EAAKC,SACZ+E,SAAU,kBACRJ,GAAQ,SAAC5F,GAAD,mBAAC,eAAcA,GAAf,IAAoBiB,UAAWjB,EAAIiB,iBALjD,gBASE,sBAAKZ,MAAO,CAAE4F,SAAU,YAAxB,UACGlF,EACD,cAACmF,EAAD,CAAOnF,KAAMA,EAAMC,KAAMA,IACxBD,EAAO,EACR,cAACmF,EAAD,CAAOnF,KAAMA,EAAO,EAAGC,KAAMA,aCZxBmF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjE,MAAK,YAAkD,IAA/CkE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1H,SAAS2H,eAAe,SAM1BX,M","file":"static/js/main.28329b47.chunk.js","sourcesContent":["import { createContext, useState, useEffect, useContext } from \"react\";\n\nconst login = () => {\n  window.localStorage.removeItem(\"token\");\n  window.location.replace(\n    `${process.env.REACT_APP_API_BASE_URI}/tokens?from=${window.location.href}`\n  );\n};\n\nexport const AuthContext = createContext({ token: null, login });\n\nexport const useAuth = () => useContext(AuthContext);\n\nconst AuthProvider = ({ children }) => {\n  const [value, setValue] = useState({ token: null, login });\n\n  useEffect(() => {\n    let token;\n    const { searchParams } = new URL(document.location);\n    if (searchParams.has(\"token\")) {\n      token = searchParams.get(\"token\");\n    }\n\n    if (!token) {\n      token = window.localStorage.getItem(\"token\");\n    }\n\n    if (!token) {\n      login();\n    } else {\n      window.localStorage.setItem(\"token\", token);\n      if (searchParams.has(\"token\")) {\n        searchParams.delete(\"token\");\n        const search = searchParams.toString();\n        window.history.replaceState(\n          undefined,\n          undefined,\n          `${window.location.pathname}${search.length > 0 ? `?${search}` : \"\"}`\n        );\n      }\n\n      setValue((old) => ({ ...old, token }));\n    }\n  }, []);\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthProvider;\n","import { useEffect, useState } from \"react\";\nimport {\n  VictoryChart,\n  VictoryTheme,\n  VictoryAxis,\n  VictoryLine,\n  VictoryBar,\n  VictoryVoronoiContainer,\n  VictoryTooltip,\n  VictoryArea,\n} from \"victory\";\nimport { useAuth } from \"./Auth\";\n\nvar PERCENT = new Intl.NumberFormat(undefined, {\n  style: \"percent\",\n});\n\nconst DATE = {\n  format: (date) =>\n    new Intl.DateTimeFormat(undefined, {\n      month: \"short\",\n      day: \"numeric\",\n    }).format(date),\n};\n\nconst TEMPERATURE = {\n  format: (value) =>\n    `${new Intl.NumberFormat(undefined, {\n      maximumFractionDigits: 0,\n    }).format(value)}Â°C`,\n};\n\nconst Month = ({ year, month, hide = { humidity: false } }) => {\n  const [chart, setChart] = useState({ data: [], maxima: undefined });\n  const { token, login } = useAuth();\n\n  useEffect(() => {\n    const getData = () => {\n      Promise.all(\n        Array.from({ length: 12 }).map((_, index) =>\n          fetch(\n            `${process.env.REACT_APP_API_BASE_URI}/data?month=${String(\n              index + 1\n            ).padStart(2, \"0\")}&year=${year}`,\n            {\n              headers: {\n                Accept: \"application/json\",\n                Authorization: `Bearer ${token}`,\n              },\n            }\n          )\n            .then((d) => {\n              if (d.status === 403) {\n                return login();\n              }\n\n              return d.json();\n            })\n            .catch(console.warn)\n        )\n      ).then((data) => {\n        const indoorTemps = [];\n        const indoorBoiler = [];\n        const outdoorTemps = [];\n        const outdoorHumidity = [];\n\n        data\n          .filter(Boolean)\n          .filter(({ error }) => !error)\n          .map(({ data }) => data)\n          .flat()\n          .forEach(({ date, indoor, outdoor }) => {\n            const x = new Date(date).getTime();\n\n            if (indoor && !indoor.noValue) {\n              indoorTemps.push({\n                tooltipLabel: `indoor: ${TEMPERATURE.format(indoor.celsius)}`,\n                x,\n                y: indoor.celsius,\n              });\n              indoorBoiler.push({\n                tooltipLabel: `boiler: ${PERCENT.format(indoor.percentBoiler)}`,\n                x,\n                y: indoor.percentBoiler,\n              });\n            }\n            if (outdoor) {\n              outdoorTemps.push({\n                tooltipLabel: `outdoor: ${TEMPERATURE.format(outdoor.celsius)}`,\n                x,\n                y: outdoor.celsius,\n              });\n              outdoorHumidity.push({\n                tooltipLabel: `humidity: ${PERCENT.format(outdoor.humidity)}`,\n                x,\n                y: outdoor.humidity,\n              });\n            }\n          });\n\n        const chartData = [\n          indoorBoiler,\n          outdoorHumidity,\n          indoorTemps,\n          outdoorTemps,\n        ];\n        const tempMaxima = Math.max(\n          ...indoorTemps.map((d) => d.y),\n          ...outdoorTemps.map((d) => d.y)\n        );\n\n        setChart({\n          data: chartData,\n          tempMaxima: tempMaxima,\n        });\n      });\n    };\n\n    if (token) {\n      getData();\n    }\n  }, [login, month, token, year]);\n\n  if (chart.data.length <= 0) return null;\n\n  return (\n    <VictoryChart\n      theme={VictoryTheme.material}\n      height={600}\n      width={2000}\n      scale={{ x: \"time\", y: \"linear\" }}\n      containerComponent={\n        <VictoryVoronoiContainer\n          voronoiDimension=\"x\"\n          labelComponent={\n            <VictoryTooltip cornerRadius={10} flyoutStyle={{ fill: \"white\" }} />\n          }\n          labels={({ datum }) => datum.tooltipLabel || datum.y}\n        />\n      }\n    >\n      <VictoryArea\n        data={chart.data[1]}\n        barRatio={0.1}\n        alignment=\"start\"\n        interpolation=\"stepBefore\"\n        style={{\n          data: {\n            fill: hide.humidity ? \"transparent\" : \"rgb(201, 238, 247)\",\n          },\n        }}\n      />\n      <VictoryBar\n        data={chart.data[0]}\n        barRatio={0.7}\n        alignment=\"start\"\n        style={{ data: { fill: \"rgb(153, 63, 35)\" } }}\n      />\n\n      <VictoryLine\n        data={chart.data[2]}\n        y={(datum) => datum.y / chart.tempMaxima}\n        style={{ data: { stroke: \"red\" } }}\n      />\n      <VictoryLine\n        data={chart.data[3]}\n        y={(datum) => datum.y / chart.tempMaxima}\n        style={{ data: { stroke: \"green\" } }}\n      />\n\n      <VictoryAxis\n        tickFormat={DATE.format}\n        tickValues={Array.from({ length: 12 })\n          .map((_, index) => new Date(`${year}-${index + 1}-01`).getTime())\n          .concat(new Date(`${year}-12-31`).getTime())}\n      />\n      <VictoryAxis dependentAxis tickFormat={PERCENT.format} />\n      <VictoryAxis\n        dependentAxis\n        orientation=\"right\"\n        tickFormat={(t) => TEMPERATURE.format(t * chart.tempMaxima)}\n      />\n    </VictoryChart>\n  );\n};\n\nexport default Month;\n","import { useState } from \"react\";\nimport Chart from \"./Chart\";\nimport AuthProvider from \"./Auth\";\n\nconst App = () => {\n  const [hide, setHide] = useState({ humidity: false });\n\n  const year = new Date().getUTCFullYear();\n\n  return (\n    <AuthProvider>\n      <div>\n        <input\n          type=\"checkbox\"\n          value={hide.humidity}\n          onChange={() =>\n            setHide((old) => ({ ...old, humidity: !old.humidity }))\n          }\n        />\n        Hide Humidity\n        <div style={{ position: \"relative\" }}>\n          {year}\n          <Chart year={year} hide={hide} />\n          {year - 1}\n          <Chart year={year - 1} hide={hide} />\n        </div>\n      </div>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}